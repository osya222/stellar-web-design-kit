
import React, { useState } from 'react';
import {
  Card,
  CardContent,
  CardHeader,
  CardTitle,
} from "@/components/ui/card";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
import { Button } from "@/components/ui/button";
import { Search, Filter } from "lucide-react";
import { formatPrice } from '@/lib/formatters';

// Define our product type
interface Product {
  id: number;
  name: string;
  size: string;
  expiryDate: string;
  manufacturer: string;
  packaging: string;
  price: number;
}

const ProductCatalog: React.FC = () => {
  // Sample product data from the image
  const products: Product[] = [
    { id: 1, name: "–ö–æ—Ç–ª–µ—Ç—ã –∫–∞–ª—å–º–∞—Ä–æ–≤—ã–µ", size: "", expiryDate: "–°–µ–Ω—Ç—è–±—Ä—å, 24", manufacturer: "¬´–Æ–Ω–∏–∞–Ω—Ç¬ª", packaging: "5 –∫–≥", price: 255 },
    { id: 2, name: "–ö–æ—Ç–ª–µ—Ç—ã –∫—É—Ä–∏–Ω—ã–µ", size: "", expiryDate: "–°–µ–Ω—Ç—è–±—Ä—å, 24", manufacturer: "¬´–Æ–Ω–∏–∞–Ω—Ç¬ª", packaging: "10,5 –∫–≥", price: 400 },
    { id: 3, name: "–ö–æ—Ç–ª–µ—Ç—ã –ª–æ—Å–æ—Å–µ–≤—ã–µ", size: "", expiryDate: "–ò—é–ª—å, 24", manufacturer: "¬´–Æ–Ω–∏–∞–Ω—Ç¬ª", packaging: "5 –∫–≥", price: 240 },
    { id: 4, name: "–ö–æ—Ç–ª–µ—Ç—ã —Ç—Ä–µ—Å–∫–æ–≤—ã–µ", size: "", expiryDate: "–ò—é–ª—å, 24", manufacturer: "¬´–Æ–Ω–∏–∞–Ω—Ç¬ª", packaging: "5 –∫–≥", price: 200 },
    { id: 5, name: "–ö–æ—Ç–ª–µ—Ç—ã ‚Äî –§–∏–ª–µ –≥–æ—Ä–±—É—à–∏ –¢–†–ï–£–ì–û–õ–¨–ù–ò–ö–ò", size: "", expiryDate: "–û–∫—Ç—è–±—Ä—å, 24", manufacturer: "¬´–Æ–Ω–∏–∞–Ω—Ç¬ª", packaging: "5 –∫–≥", price: 445 },
    { id: 6, name: "–ö–æ—Ç–ª–µ—Ç—ã ‚Äî –∏–∑ —Ñ–∏–ª–µ –º–∏–Ω—Ç–∞—è (–Ω–∞–≥–≥–µ—Ç—Å—ã/–ø–∞–ª–æ—á–∫–∏/—Ç—Ä–µ—É–≥/—Ñ–∏—à–∫–µ–π–∫–∏)", size: "", expiryDate: "–û–∫—Ç—è–±—Ä—å, 24", manufacturer: "¬´–Æ–Ω–∏–∞–Ω—Ç¬ª", packaging: "5 –∫–≥", price: 315 },
    { id: 7, name: "–ö–æ—Ç–ª–µ—Ç—ã ‚Äî –§–∏–ª–µ –º–∏–Ω—Ç–∞—è –≤ –∫–ª—è—Ä–µ", size: "", expiryDate: "–§–µ–≤—Ä–∞–ª—å, 25", manufacturer: "¬´–Æ–Ω–∏–∞–Ω—Ç¬ª", packaging: "5 –∫–≥", price: 410 },
    { id: 8, name: "–ö—Ä–∞—Å–Ω–æ–≥–ª–∞–∑–∫–∞ –Ω/—Ä", size: "300 –≥—Ä+", expiryDate: "–ú–∞—Ä—Ç, 24", manufacturer: "–ù.–ó–µ–ª–∞–Ω–¥–∏—è", packaging: "20 –∫–≥", price: 225 },
    { id: 9, name: "–ö—Ä–µ–≤–µ—Ç–∫–∞ —Å/–º –æ—á–∏—â–µ–Ω–Ω–∞—è –ë/–•–≤ (–§–∞—Å –ø–æ 1 –∫–≥)", size: "16-20 —à—Ç/—Ñ", expiryDate: "–ê–≤–≥—É—Å—Ç, 24", manufacturer: "–≠–∫–≤–∞–¥–æ—Ä", packaging: "10*1 –∫–≥", price: 1115 },
    { id: 10, name: "–ö—Ä–µ–≤–µ—Ç–∫–∞ —Å/–º –æ—á–∏—â–µ–Ω–Ω–∞—è –ë/–•–≤ (–§–∞—Å –ø–æ 1 –∫–≥)", size: "26-30 —à—Ç/—Ñ", expiryDate: "–ê–≤–≥—É—Å—Ç, 24", manufacturer: "–≠–∫–≤–∞–¥–æ—Ä", packaging: "10*1 –∫–≥", price: 1015 },
    { id: 11, name: "–ö—Ä–µ–≤–µ—Ç–∫–∞ —Å/–º –æ—á–∏—â–µ–Ω–Ω–∞—è –°/–•–≤ (–§–∞—Å –ø–æ 1 –∫–≥)", size: "26-30 —à—Ç/—Ñ", expiryDate: "–ê–≤–≥—É—Å—Ç, 24", manufacturer: "–≠–∫–≤–∞–¥–æ—Ä", packaging: "10*1 –∫–≥", price: 1005 },
    { id: 12, name: "–ö—Ä–µ–≤–µ—Ç–∫–∞ –ö–æ—Ä–æ–ª–µ–≤—Å–∫–∞—è –í–∞–Ω–Ω–∞–º–µ–π (14%)", size: "50-70 —à—Ç", expiryDate: "–ê–≤–≥—É—Å—Ç, 24", manufacturer: "¬´–ö–∞–º–∞—Ä–æ–Ω¬ª", packaging: "5 –∫–≥", price: 560 },
    { id: 13, name: "–ö—Ä–µ–≤–µ—Ç–∫–∞ –ö–æ—Ä–æ–ª–µ–≤—Å–∫–∞—è –í–∞–Ω–Ω–∞–º–µ–π (–ì–ª–∞–∑—É—Ä—å)", size: "50-70 —à—Ç", expiryDate: "–ê–≤–≥—É—Å—Ç, 24", manufacturer: "¬´–ö–∞–º–∞—Ä–æ–Ω¬ª", packaging: "5 –∫–≥", price: 555 },
    { id: 14, name: "–ö—Ä–µ–≤–µ—Ç–∫–∏ (–ª–∞–Ω–≥—É—Å—Ç–∏–Ω—ã) –ë/–ì –°2", size: "56-100 —à—Ç/–∫–≥", expiryDate: "–ú–∞—Ä—Ç, 24", manufacturer: "–ê—Ä–≥–µ–Ω—Ç–∏–Ω–∞", packaging: "6*2 –∫–≥", price: 1000 },
    { id: 15, name: "–ö—Ä–µ–≤–µ—Ç–∫–∏ (–ª–∞–Ω–≥—É—Å—Ç–∏–Ω—ã) –ù/–† L1", size: "10-20 —à—Ç/–∫–≥", expiryDate: "–ê–≤–≥—É—Å—Ç, 24", manufacturer: "–ê—Ä–≥–µ–Ω—Ç–∏–Ω–∞", packaging: "6*2 –∫–≥", price: 860 },
    { id: 16, name: "–ö—Ä–µ–≤–µ—Ç–∫–∞ —Å–µ–≤–µ—Ä–Ω–∞—è", size: "150 —à—Ç+", expiryDate: "–ò—é–Ω—å, 24", manufacturer: "¬´–ë–µ–ª–æ–º–æ—Ä—Å–∫–∏–π –†—ã–±–∞–∫¬ª", packaging: "5 –∫–≥", price: 560 },
    { id: 17, name: "–ö—Ä–µ–≤–µ—Ç–∫–∞ —Å–µ–≤–µ—Ä–Ω–∞—è", size: "90-120 —à—Ç/–∫–≥", expiryDate: "–î–µ–∫–∞–±—Ä—å, 23", manufacturer: "–ö–∏—Ç–∞–π", packaging: "5 –∫–≥", price: 780 },
    { id: 18, name: "–õ–µ–º–æ–Ω–µ–º–∞-—Ç—É—à–∫–∞", size: "", expiryDate: "–ê–≤–≥—É—Å—Ç, 24", manufacturer: "–î. –í–æ—Å—Ç–æ–∫", packaging: "22 –∫–≥", price: 168 },
    { id: 19, name: "–õ–æ—Å–æ—Å—å –°/–ì premium", size: "6-7 –∫–≥", expiryDate: "–ú–∞–π, 24", manufacturer: "–ß–∏–ª–∏", packaging: "–≤–µ—Å", price: 1450 },
    { id: 20, name: "–õ–æ—Å–æ—Å—å –°/–ì premium", size: "7-8 –∫–≥", expiryDate: "–ú–∞–π, 24", manufacturer: "–ß–∏–ª–∏", packaging: "–≤–µ—Å", price: 1470 },
    { id: 21, name: "–ú–∏–¥–∏–∏ –Ω–∞ –ø–æ–ª–æ–≤–∏–Ω–∫–µ —Ä–∞–∫–æ–≤–∏–Ω—ã (–ì–æ–ª—É–±—ã–µ)", size: "30-40 —à—Ç/–∫–≥", expiryDate: "–°–µ–Ω—Ç—è–±—Ä—å, 24", manufacturer: "–ö–∏—Ç–∞–π", packaging: "12 –∫–≥", price: 470 },
    { id: 22, name: "–ú–∏–Ω—Ç–∞–π –ë/–ì", size: "30 —Å–º+", expiryDate: "–î–µ–∫–∞–±—Ä—å, 24", manufacturer: "–î. –í–æ—Å—Ç–æ–∫", packaging: "–æ–∂–∏–¥–∞–µ—Ç—Å—è", price: 185 },
  ];
  
  const [searchTerm, setSearchTerm] = useState('');
  const [selectedManufacturer, setSelectedManufacturer] = useState('all');
  const [selectedExpiryDate, setSelectedExpiryDate] = useState('all');
  const [showFilters, setShowFilters] = useState(false);
  
  // Get unique manufacturers and expiry dates for filter options
  const manufacturers = Array.from(new Set(products.map(product => product.manufacturer)));
  const expiryDates = Array.from(new Set(products.map(product => product.expiryDate)));
  
  // Filter products based on search term and selected filters
  const filteredProducts = products.filter(product => {
    return (
      product.name.toLowerCase().includes(searchTerm.toLowerCase()) &&
      (selectedManufacturer === 'all' || product.manufacturer === selectedManufacturer) &&
      (selectedExpiryDate === 'all' || product.expiryDate === selectedExpiryDate)
    );
  });
  
  // Reset filters
  const handleResetFilters = () => {
    setSearchTerm('');
    setSelectedManufacturer('all');
    setSelectedExpiryDate('all');
  };
  
  return (
    <Card>
      <CardHeader className="bg-blue-50">
        <CardTitle className="text-2xl font-bold text-center">–ö–∞—Ç–∞–ª–æ–≥ –ú–æ—Ä–µ–ø—Ä–æ–¥—É–∫—Ç–æ–≤</CardTitle>
        
        <div className="flex flex-col gap-4 mt-4">
          <div className="flex flex-col md:flex-row gap-4 items-center">
            {/* Search box */}
            <div className="relative flex-1">
              <Search className="absolute left-2 top-2.5 h-4 w-4 text-gray-500" />
              <input
                type="text"
                placeholder="–ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é..."
                className="pl-8 pr-4 py-2 w-full border rounded"
                value={searchTerm}
                onChange={(e) => setSearchTerm(e.target.value)}
              />
            </div>
            
            {/* Filter toggle button */}
            <Button 
              variant="outline" 
              onClick={() => setShowFilters(!showFilters)}
              className="w-full md:w-auto flex items-center gap-2"
            >
              <Filter size={16} />
              {showFilters ? '–°–∫—Ä—ã—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã' : '–ü–æ–∫–∞–∑–∞—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã'}
            </Button>
            
            {/* Reset button */}
            <Button 
              variant="outline" 
              onClick={handleResetFilters}
              className="w-full md:w-auto"
            >
              –°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã
            </Button>
          </div>
          
          {/* Filters */}
          {showFilters && (
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              {/* Manufacturer filter */}
              <div>
                <label className="block mb-1 text-sm font-medium">–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å:</label>
                <Select value={selectedManufacturer} onValueChange={setSelectedManufacturer}>
                  <SelectTrigger>
                    <SelectValue placeholder="–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å" />
                  </SelectTrigger>
                  <SelectContent>
                    <SelectItem value="all">–í—Å–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª–∏</SelectItem>
                    {manufacturers.map((manufacturer) => (
                      <SelectItem key={manufacturer} value={manufacturer}>
                        {manufacturer}
                      </SelectItem>
                    ))}
                  </SelectContent>
                </Select>
              </div>
              
              {/* Expiry date filter */}
              <div>
                <label className="block mb-1 text-sm font-medium">–°—Ä–æ–∫ –≥–æ–¥–Ω–æ—Å—Ç–∏:</label>
                <Select value={selectedExpiryDate} onValueChange={setSelectedExpiryDate}>
                  <SelectTrigger>
                    <SelectValue placeholder="–°—Ä–æ–∫ –≥–æ–¥–Ω–æ—Å—Ç–∏" />
                  </SelectTrigger>
                  <SelectContent>
                    <SelectItem value="all">–í—Å–µ —Å—Ä–æ–∫–∏</SelectItem>
                    {expiryDates.map((date) => (
                      <SelectItem key={date} value={date}>
                        {date}
                      </SelectItem>
                    ))}
                  </SelectContent>
                </Select>
              </div>
            </div>
          )}
        </div>
      </CardHeader>
      
      <CardContent className="px-4 py-6">
        {filteredProducts.length === 0 ? (
          <div className="text-center py-10 text-gray-500">
            –¢–æ–≤–∞—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏–∑–º–µ–Ω–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–∏—Å–∫–∞.
          </div>
        ) : (
          <>
            <div className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6">
              {filteredProducts.map((product) => (
                <Card key={product.id} className="overflow-hidden hover:shadow-lg transition-shadow">
                  <div className="h-40 bg-blue-100 flex items-center justify-center">
                    <div className="text-6xl text-blue-300">üêü</div>
                  </div>
                  <CardContent className="p-4">
                    <h3 className="font-bold line-clamp-2 h-12 mb-2" title={product.name}>
                      {product.name}
                    </h3>
                    <div className="space-y-1 text-sm mb-4">
                      {product.size && (
                        <div className="flex justify-between">
                          <span className="text-gray-500">–†–∞–∑–º–µ—Ä:</span>
                          <span className="font-medium">{product.size}</span>
                        </div>
                      )}
                      <div className="flex justify-between">
                        <span className="text-gray-500">–°—Ä–æ–∫ –≥–æ–¥–Ω–æ—Å—Ç–∏:</span>
                        <span className="font-medium">{product.expiryDate}</span>
                      </div>
                      <div className="flex justify-between">
                        <span className="text-gray-500">–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å:</span>
                        <span className="font-medium">{product.manufacturer}</span>
                      </div>
                      <div className="flex justify-between">
                        <span className="text-gray-500">–£–ø–∞–∫–æ–≤–∫–∞:</span>
                        <span className="font-medium">{product.packaging}</span>
                      </div>
                    </div>
                    <div className="flex justify-between items-center mt-4">
                      <div className="text-lg font-bold text-blue-800">
                        {formatPrice(product.price)}
                      </div>
                      <Button size="sm">–ó–∞–∫–∞–∑–∞—Ç—å</Button>
                    </div>
                  </CardContent>
                </Card>
              ))}
            </div>
            
            <div className="mt-6 text-right text-sm text-gray-500">
              –í—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤: {filteredProducts.length}
            </div>
          </>
        )}
      </CardContent>
    </Card>
  );
};

export default ProductCatalog;
